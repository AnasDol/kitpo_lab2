Задание:
Разработать оконное приложение, работающее со структурой данных – двусвязный разомкнутый список. Обеспечить возможность настройки приложения на работу с выбранным из списка типов данных (как минимум, 2).

СД хранит данные произвольного типа:
•	Количество хранимых типов – не менее 2
•	Экземпляр СД хранит объекты только одного типа (например, только целые или только строки)
Набор операций для структуры данных: 
•	добавление в конец, получение, вставка и удаление по логическому номеру (индексу). Логический номер – порядковый номер хранимого элемента в соответствии с последовательностью обхода структуры данных (перебора элементов)
•	для исходно упорядоченной (например, «двоичное дерево») вставка с сохранением порядка, получение и удаление по по логическому номеру (индексу)
•	Итератор forEach – для Java: интерфейс обратного вызова с методом void toDo(T v), итератора получает ссылку на интерфейсный объект (анонимный класс), обходит структуру данных и вызывает метод для каждого выбранного элемента. В Scala – формальный параметр = функция.
•	сортировка, для исходно упорядоченной – балансировка = создание экземпляра структуры данных с равными размерностями компонент (например, сбалансированное дерево, либо список списков со списками нижнего уровня равной длины)
•	сериализация хранимых данных в текстовый (двоичный) файл в формате по выбору – XML, JSON, собственный двоичный (сохранение и загрузка)
Структуру данных реализовать в виде шаблона или реализации интерфейса, работающего с произвольным типом данных (ТД). Требуется, чтобы для добавления нового ТД нужно было бы создать класс ТД, присоединяющий общий для ТД интерфейс и добавить экземпляр этого класса в фабрику. Никакие другие изменения в код не допускаются.
Вариант задания
6. Двусвязный разомкнутый список
Типы хранимых данных:
•	Целое
•	Дата
 
